#!/bin/bash
set -ueo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/shared.bash
. "$DIR/../lib/shared.bash"
# shellcheck source=lib/metadata.bash
. "$DIR/../lib/metadata.bash"


commands=()

[[ -n "$(plugin_read_list RUN)" ]] && commands+=("RUN")
[[ -n "$(plugin_read_list WRAP_COMMAND)" ]] && commands+=("WRAP_COMMAND")

if [[ ! in_array "RUN" "${commands[@]}" ]] && [[ ! in_array "WRAP_COMMAND" "${commands[@]}" ]]; then
  exit 0
fi

override_file="docker-compose.buildkite-${BUILDKITE_BUILD_NUMBER}-override.yml"
prebuilt_candidates=()

# Build a list of services that need to be pulled down
while read -r name ; do
  if [[ -n "$name" ]] ; then
    if ! in_array "$name" "${prebuilt_candidates[@]}" ; then
      prebuilt_candidates+=("$name")
    fi
  fi
done <<< "$(plugin_read_list PULL)"

# A list of tuples of [service image cache_from] for build_image_override_file
prebuilt_service_overrides=()
prebuilt_services=()

# We look for a prebuilt images for all the pull services and the run_service.
for service_name in "${prebuilt_candidates[@]}" ; do
  if prebuilt_image=$(get_prebuilt_image "$service_name") ; then
    echo "~~~ :docker: Found a pre-built image for $service_name"
    prebuilt_service_overrides+=("$service_name" "$prebuilt_image" "")
    prebuilt_services+=("$service_name")
  fi
done

# If there are any prebuilts, we need to generate an override docker-compose file
if [[ ${#prebuilt_services[@]} -gt 0 ]] ; then
  echo "~~~ :docker: Creating docker-compose override file for prebuilt services"
  build_image_override_file "${prebuilt_service_overrides[@]}" | tee "$override_file"
  export BUILDKITE_PLUGIN_DOCKER_COMPOSE_OVERRIDE_FILE=$override_file
fi

# Export metadata values
compose_config=()
for file in $(docker_compose_config_files) ; do
  compose_config+=("$file")
done
test -f "$override_file" && compose_config+=("${override_file}")
buildkite-agent meta-data set "docker-compose-config-files" "${compose_config[@]}"
buildkite-agent meta-data set "docker-compose-project-name" "$(docker_compose_project_name)"
buildkite-agent meta-data set "docker-compose-container-prefix" "$(docker_compose_project_name)_build_${BUILDKITE_BUILD_NUMBER}"
